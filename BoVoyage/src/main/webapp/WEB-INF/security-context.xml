<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Localiser le fichier .properties -->
	<context:property-placeholder location="classpath*:ds-infos.properties" />

	<!-- déclaration du bean dataSource -->
	<bean id="dataSourceBean"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- injecter les propriétés de la connexion à la base de données -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 1: config de la partie autorisation -->

	<security:http>
		<!-- spécifier les url Http à protéger avec la balise intercept-url via l'attribut pattern -->
		<security:intercept-url pattern="/agCTRL/**" access="ROLE_AGENT" />

		<!-- utiliser le formulaire généré automatiquement par spring security -->
		<security:form-login login-page="/login" authentication-failure-url="/loginEchec"/>

		<!-- définir la page de redirection lors de la deconnexion -->
		<security:logout logout-success-url="/logout" />
	</security:http>


	<!-- 2: config de la partie authentification -->
	<security:authentication-manager>
		<security:authentication-provider>

			<!-- Utiliser les données de la base de données pour récupérer les utilisateurs -->
			<security:jdbc-user-service
				data-source-ref="dataSourceBean"
				users-by-username-query="SELECT mail, mdp, active FROM agents WHERE mail=?"
				authorities-by-username-query="SELECT ag.mail, r.rolename FROM agents ag, roles r WHERE ag.id_ag=r.ag_id AND ag.mail=?" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
