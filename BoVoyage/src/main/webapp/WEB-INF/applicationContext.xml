<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- Activation des annotations d'injections de dépendances: @Autowired, 
		@Value, @Resource et @Inject -->
	<context:annotation-config />

	<!-- Activation de la détection automatique des composants: @Component, 
		@Repository, @Service et @Controller -->
	<context:component-scan base-package="fr.adaming" />

	<!-- Localiser le fichier ds-infos.properties -->
	<!-- classpath concerne le dossier src -->
	<context:property-placeholder location="classpath*:ds-infos.properties" />

	<!-- Déclaration du bean dataSource -->
	<bean id="dataSourceBean"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- Injecter les propriétés de la connexion à la BD -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Déclaration du bean entityManagerFactory -->
	<bean id="entityManagerFactoryBean"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- Injection par modificateurs d'un dataSource -->
		<property name="dataSource" ref="dataSourceBean" />
		<!-- Spécification des classes annotées par les annotations JPA (mapping 
			Objet-Relationnel) : rend persistence.xml obsolète ! -->
		<property name="packagesToScan" value="fr.adaming.model" />
		<!-- JpaVendorAdapter implementation for Hibernate EntityManager.
           Exposes Hibernate's persistence provider and EntityManager extension interface -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hb.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hb.hbm2ddl}</prop>
				<prop key="hibernate.show_sql">${hb.sql}</prop>
			</props>
		</property>
	</bean>

	<!-- Déclaration du bean transactionManager -->
	<bean id="transactionManagerBean" class="org.springframework.orm.jpa.JpaTransactionManager">	<!-- On utilise Hibernate 4 -->
		<!-- Injection par modificateur d'un sessionFactory -->
		<property name="entityManagerFactory" ref="entityManagerFactoryBean" />
	</bean>

	<!-- Activation de la détection des annotations des transactions: @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManagerBean" />

</beans>
